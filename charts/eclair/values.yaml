# Default values for bitcoind.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: acinq/eclair
  tag: release-0.8.0
  pullPolicy: IfNotPresent

env:
  JAVA_OPTS: -Declair.printToConsole
# Ports that are exposed to other pods in your cluster
internalServices:
  rpcPort: 8080

# Ports that are visible outside your cluster
externalServices:
  p2pPort: 9735
  type: LoadBalancer

  # Ingress for Eclair REST API
  # only for develop purposes
ingress:
  enabled: false
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/enable-cors: "true"
  hosts:
    - host: eclair.dev.flitz.be
      paths:
        - path: /
  tls:
    - hosts:
        - eclair.dev.flitz.be
      secretName: eclair-tls-secret

configurationFile:
  eclair.conf: |
    eclair.node-alias="CHANGEME"
    eclair.chain=regtest
    eclair.node-color=49daaa
    eclair.api.enabled=true
    eclair.api.password=foobar
    eclair.api.port=8080
    eclair.api.binding-ip=0.0.0.0
    eclair.bitcoind.host=CHANGEME
    eclair.bitcoind.rpcuser=rpcuser
    eclair.bitcoind.rpcpassword=rpcpassword
    eclair.bitcoind.zmqblock="tcp://CHANGEME:28332"
    eclair.bitcoind.zmqtx="tcp://CHANGEME:28333"

extraConfig:
  enabled: false
  secretName: eclair-extra-config
pluginConfig:
  enabled: false
  secretName: eclair-plugin-config

# if specified, must be the name of a secret
# that contains exactly 2 data fields:
# - node_seed.dat -> SECURELY GENERATED 32 RANDOM bytes
# - channel_seed.dat -> SECURELY GENERATED 32 RANDOM bytes
# these will be used as the nodes' seed
# if this is used in conjunction with a postgres database, then no persistent volume mount is needed.
# to generate such a file: dd if=/dev/urandom of=node_seed.dat bs=32 count=1
# existingSeed: eclair-seed-secret

rtl:
  enabled: false
  eclairExtraConfigFile: eclair-extra.conf
  password: password
  image:
    repository: shahanafarooqui/rtl
    tag: 0.13.6
  port: 3000
  ingress:
    enabled: false
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: letsencrypt-prod
      nginx.ingress.kubernetes.io/enable-cors: "true"
    hosts:
      - host: rtl.eclair.regtest.getalby.com
        paths:
          - path: /
    tls:
      - hosts:
          - rtl.eclair.regtest.getalby.com
        secretName: eclair-rtl-tls-secret
persistence:
  enabled: true
  ## database data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  accessMode: ReadWriteOnce
  size: 5Gi

## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
resources: {}
#  requests:
#    memory: 512Mi
#    cpu: 300m
