apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "eclair.fullname" . }}
  labels:
    app: {{ template "eclair.name" . }}
    chart: {{ template "eclair.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{ template "eclair.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      labels:
        app: {{ template "eclair.name" . }}
        release: {{ .Release.Name }}
    spec:
      initContainers:
        - name: copy-config
          image: busybox
          command: ['sh', '-c', 'cp /configmap/eclair.conf /data/eclair.conf']
          volumeMounts:
            - name: config
              mountPath: /configmap
            - name: data
              mountPath: /data
        {{ if .Values.extraConfig.enabled }}
        - name: copy-extra-config
          image: busybox
          command: ['sh', '-c', 'cat /configmap/* >> /data/eclair.conf']
          volumeMounts:
            - name: extraconfig
              mountPath: /configmap
            - name: data
              mountPath: /data
        {{ end }}
        {{ if .Values.pluginConfig.enabled }}
        - name: copy-plugin-config
          image: busybox
          command: ['sh', '-c', 'mkdir -p /data/plugin-resources/alarmbot && cat /pluginconfigmap/* >> /data/plugin-resources/alarmbot/alarmbot.conf']
          volumeMounts:
            - name: pluginconfig
              mountPath: /pluginconfigmap
            - name: data
              mountPath: /data
        {{ end }}
      containers:
        - name: {{ template "eclair.fullname" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          env:
            {{- range $key, $value := .Values.env }}
            - name: {{ $key | quote }}
              value: {{ $value | quote }}
            {{- end }}
          args:
            {{- toYaml .Values.args | nindent 12 }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          ports:
            - name: rpc
              containerPort: {{ .Values.internalServices.rpcPort }}
            - name: p2p
              containerPort: {{ .Values.externalServices.p2pPort }}
          volumeMounts:
            - name: data
              mountPath: /data
          lifecycle:
            preStop:
              exec:
                # Make sure we safely quit eclair so we don't corrupt
                # anything, todo
                command: ["echo stopped"]
      volumes:
        - name: data
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "eclair.fullname" .) }}
        {{- else }}
          emptyDir: {}
        {{- end }}
        - name: config
          configMap:
            name: {{ template "eclair.fullname" . }}-config
        {{ if .Values.extraConfig.enabled }}
        - name: extraconfig
          projected:
            sources:
            - secret:
                name: {{ .Values.extraConfig.secretName }}
        {{ end }}
        {{ if .Values.pluginConfig.enabled }}
        - name: pluginconfig
          projected:
            sources:
            - secret:
                name: {{ .Values.pluginConfig.secretName }}
        {{ end }}